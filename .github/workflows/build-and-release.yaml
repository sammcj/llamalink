name: Build and release
on:
  workflow_dispatch:

permissions:
  contents: write
  checks: write
  pull-requests: write
  packages: write

jobs:
  build-and-release:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.22.1

      # Install dependencies
      - name: Install dependencies
        run: go mod download

      # Build
      - name: Build macOS ARM64
        run: |
          GOOS=darwin GOARCH=arm64 go build -o main.go -o llamalink-macos-arm64
          echo "macOS ARM64 build completed" >> "$GITHUB_STEP_SUMMARY"

      - name: Build Linux
        run: |
          GOOS=linux GOARCH=amd64 go build -o main.go -o llamalink-linux-amd64
          GOOS=linux GOARCH=arm64 go build -o main.go -o llamalink-linux-arm64
          echo "Linux build completed" >> "$GITHUB_STEP_SUMMARY"

      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: llamalink
          path: |
            llamalink-macos-arm64
            llamalink-linux-amd64
            llamalink-linux-arm64

      # Bump version
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: main
          pre_release_branches: dev

      # Publish
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          generateReleaseNotes: true
          allowUpdates: true
          prerelease: ${{ startsWith(github.ref, 'refs/heads/dev') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
